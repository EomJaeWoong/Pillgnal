package com.pillgnal.backend.service;

import com.pillgnal.backend.domain.example.Example;
import com.pillgnal.backend.domain.example.ExampleRepository;
import com.pillgnal.backend.dto.ExampleResponseDto;
import com.pillgnal.backend.dto.ExampleSaveRequestDto;
import com.pillgnal.backend.dto.ExampleUpdateRequestDto;

import lombok.Data;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import javax.transaction.Transactional;

@RequiredArgsConstructor
@Service
public class ExampleService {
    private final ExampleRepository exampleRepository;

    /**
     * 등록 처리
     *
     * @param requestDto
     * @return id(Long)
     *
     * @author Eomjaewoong
     */
    @Transactional
    public Long save(ExampleSaveRequestDto requestDto) {
        return exampleRepository.save(requestDto.toEntity()).getId();
    }

    /**
     * 수정 처리
     *
     * @param id, requestDto
     * @return id(Long)
     *
     * @author Eomjaewoong
     */
    @Transactional
    public Long update(Long id, ExampleUpdateRequestDto requestDto) {
        Example example = exampleRepository.findById(id)
                .orElseThrow(() -> new IllegalArgumentException("해당 사용자가 없습니다. id=" + id));

        // JPA의 영속성 컨텍스트 때문에 update 쿼리를 날리지 않음
        // 트랜젝션이 끝나는 시점에 해당 테이블에 변경분을 반영
        example.update(requestDto.getTitle(), requestDto.getContent());

        return id;
    }

    /**
     * 찾기 처리
     *
     * @param id
     * @return id(Long)
     *
     * @author Eomjaewoong
     */
    public ExampleResponseDto findById(Long id) {
        Example entity = exampleRepository.findById(id)
                .orElseThrow(() -> new IllegalArgumentException("해당 사용자가 없습니다. id=" + id));

        return new ExampleResponseDto(entity);
    }
}
